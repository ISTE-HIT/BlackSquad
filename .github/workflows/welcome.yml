name: Welcome Contributor

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]
  push:
    branches:
      - main

jobs:
  welcome-on-issue-or-pr:
    if: github.event_name == 'issues' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Send welcome message
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const actor = context.actor;
            const isPR = context.eventName === 'pull_request';

            const message = isPR
              ? `ðŸŽ‰ Hi @${actor}! Thank you for your first pull request. Weâ€™ll review it shortly.`
              : `ðŸ‘‹ Hello @${actor}! Thanks for opening your first issue. We appreciate your contribution!`;

            const params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              body: message
            };

            await github.rest.issues.createComment(params);

  welcome-on-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Get username
        id: extract
        run: echo "username=${GITHUB_ACTOR}" >> $GITHUB_OUTPUT

      - name: Check if first commit by user
        id: check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const username = '${{ steps.extract.outputs.username }}';
            const commits = await github.paginate(
              github.rest.repos.listCommits,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                author: username
              }
            );

            const isFirst = commits.length <= 1;
            core.setOutput("isFirst", isFirst);
            core.setOutput("username", username);

      - name: Create welcome issue
        if: steps.check.outputs.isFirst == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸŽ‰ Welcome @${{ steps.check.outputs.username }} to the repository!`,
              body: `Hi @${{ steps.check.outputs.username }}! ðŸŽ‰\n\nThank you for making your first commit to the \`main\` branch. We appreciate your contribution and look forward to more from you. ðŸš€`,
            });
